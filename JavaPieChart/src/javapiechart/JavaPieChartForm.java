/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javapiechart;

/**
 *
 * @author leem
 */
public class JavaPieChartForm extends javax.swing.JFrame {

    /**
     * Creates new form JavaPieChartForm
     */
    public JavaPieChartForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        cName1 = new javax.swing.JLabel();
        cName2 = new javax.swing.JLabel();
        cName3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(450, 550));
        setMinimumSize(new java.awt.Dimension(450, 550));
        setPreferredSize(new java.awt.Dimension(450, 550));
        setResizable(false);
        getContentPane().setLayout(null);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Process File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessFileClicked(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(130, 480, 170, 34);

        cName1.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        cName1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cName1.setText("Name");
        getContentPane().add(cName1);
        cName1.setBounds(0, 420, 120, 30);

        cName2.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        cName2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cName2.setText("Name");
        getContentPane().add(cName2);
        cName2.setBounds(150, 420, 130, 30);

        cName3.setFont(new java.awt.Font("Cantarell", 0, 24)); // NOI18N
        cName3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cName3.setText("Name");
        getContentPane().add(cName3);
        cName3.setBounds(290, 420, 150, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProcessFileClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessFileClicked
        System.out.println("Button Pressed"); // Debugging
        // Create a new Pie Chart component and set location/size
        MyPieChart mpc = new MyPieChart(); // Custom jComponent Object
        // Add the election file processing and reporting here!
        try{
            // Import file processor
            FileProcessor pFile = new FileProcessor("votes.txt"); // Pass file Name
            String[] names = new String[3]; // Hold Names
            names = pFile.getNames(); // Get Names from file
            System.out.println("Names Grabbed"); // Debugging
            
            // Set Names Lables and Colour coding... Would be more effecient if
                // if lables were in an arrat... maybe later
            this.cName1.setText(names[0]);
            this.cName2.setText(names[1]);
            this.cName3.setText(names[2]);
            this.cName1.setForeground(mpc.slices[0].getColor());
            this.cName2.setForeground(mpc.slices[1].getColor());
            this.cName3.setForeground(mpc.slices[2].getColor());
            
            // Process file votes
            pFile.tallyVotes(); // Call object method
            System.out.println("Votes Tallyed"); // Debugging
            
            double[] percents = new double[3]; // Hold vote percents
            percents = pFile.getPercents(); // get vote percents
            System.out.println("Percents Grabbed"); // Debugging
            
            // set pie slice values to the vote percents
            for(int ps=0; ps < 3; ps++){
                System.out.println(percents[ps]); // Debugging
                // Set value of objet (slices[i]) held in jCompent object (mpc)
                mpc.slices[ps].setValue((percents[ps]));
            }
            System.out.println("Slice Values set"); // Debugging
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
        mpc.setBounds(25, 25, 350, 350);    
        getContentPane().add(mpc);
        pack();
        mpc.repaint();
        System.out.println("Pie Painted");
    }//GEN-LAST:event_ProcessFileClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaPieChartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaPieChartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaPieChartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaPieChartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaPieChartForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cName1;
    private javax.swing.JLabel cName2;
    private javax.swing.JLabel cName3;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
